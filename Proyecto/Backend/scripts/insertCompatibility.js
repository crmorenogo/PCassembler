import { PrismaClient } from '@prisma/client';
const prisma = new PrismaClient();

const compatibilidadData = [
  { socket: 'AM1', chipset: 'AMD FS1b' },
  { socket: 'AM3', chipset: 'AMD 760G' },
  { socket: 'AM3', chipset: 'AMD 770' },
  { socket: 'AM3', chipset: 'AMD 785G' },
  { socket: 'AM3', chipset: 'AMD 790GX' },
  { socket: 'AM3', chipset: 'AMD 790FX' },
  { socket: 'AM3', chipset: 'AMD 870' },
  { socket: 'AM3', chipset: 'AMD 880G' },
  { socket: 'AM3', chipset: 'AMD 890GX' },
  { socket: 'AM3', chipset: 'AMD 890FX' },
  { socket: 'AM3+', chipset: 'AMD 970' },
  { socket: 'AM3+', chipset: 'AMD 990X' },
  { socket: 'AM3+', chipset: 'AMD 990FX' },
  { socket: 'AM4', chipset: 'AMD A320' },
  { socket: 'AM4', chipset: 'AMD B350' },
  { socket: 'AM4', chipset: 'AMD B450' },
  { socket: 'AM4', chipset: 'AMD B550' },
  { socket: 'AM4', chipset: 'AMD X370' },
  { socket: 'AM4', chipset: 'AMD X470' },
  { socket: 'AM4', chipset: 'AMD X570' },
  { socket: 'AM5', chipset: 'AMD B650' },
  { socket: 'AM5', chipset: 'AMD B650E' },
  { socket: 'AM5', chipset: 'AMD X670' },
  { socket: 'AM5', chipset: 'AMD X670E' },
  { socket: 'FM2', chipset: 'AMD A55' },
  { socket: 'FM2', chipset: 'AMD A75' },
  { socket: 'FM2', chipset: 'AMD A85X' },
  { socket: 'sTR4', chipset: 'AMD X399' },
  { socket: 'sTRX4', chipset: 'AMD TRX40' },
  { socket: 'LGA775', chipset: 'Intel 945' },
  { socket: 'LGA775', chipset: 'Intel G31' },
  { socket: 'LGA775', chipset: 'Intel G41' },
  { socket: 'LGA775', chipset: 'Intel P35' },
  { socket: 'LGA775', chipset: 'Intel P45' },
  { socket: 'LGA775', chipset: 'Intel X38' },
  { socket: 'LGA775', chipset: 'Intel X48' },
  { socket: 'LGA1150', chipset: 'Intel H81' },
  { socket: 'LGA1150', chipset: 'Intel B85' },
  { socket: 'LGA1150', chipset: 'Intel Q87' },
  { socket: 'LGA1150', chipset: 'Intel H87' },
  { socket: 'LGA1150', chipset: 'Intel Z87' },
  { socket: 'LGA1150', chipset: 'Intel H97' },
  { socket: 'LGA1150', chipset: 'Intel Z97' },
  { socket: 'LGA1151', chipset: 'Intel H110' },
  { socket: 'LGA1151', chipset: 'Intel B150' },
  { socket: 'LGA1151', chipset: 'Intel Q150' },
  { socket: 'LGA1151', chipset: 'Intel H170' },
  { socket: 'LGA1151', chipset: 'Intel Z170' },
  { socket: 'LGA1151', chipset: 'Intel B250' },
  { socket: 'LGA1151', chipset: 'Intel Q250' },
  { socket: 'LGA1151', chipset: 'Intel H270' },
  { socket: 'LGA1151', chipset: 'Intel Z270' },
  { socket: 'LGA1151', chipset: 'Intel B360' },
  { socket: 'LGA1151', chipset: 'Intel H370' },
  { socket: 'LGA1151', chipset: 'Intel Q370' },
  { socket: 'LGA1151', chipset: 'Intel Z390' },
  { socket: 'LGA1155', chipset: 'Intel H61' },
  { socket: 'LGA1155', chipset: 'Intel B65' },
  { socket: 'LGA1155', chipset: 'Intel Q67' },
  { socket: 'LGA1155', chipset: 'Intel H67' },
  { socket: 'LGA1155', chipset: 'Intel P67' },
  { socket: 'LGA1155', chipset: 'Intel Z68' },
  { socket: 'LGA1155', chipset: 'Intel B75' },
  { socket: 'LGA1155', chipset: 'Intel Q75' },
  { socket: 'LGA1155', chipset: 'Intel H77' },
  { socket: 'LGA1155', chipset: 'Intel Z77' },
  { socket: 'LGA1200', chipset: 'Intel H410' },
  { socket: 'LGA1200', chipset: 'Intel B460' },
  { socket: 'LGA1200', chipset: 'Intel H470' },
  { socket: 'LGA1200', chipset: 'Intel Z490' },
  { socket: 'LGA1200', chipset: 'Intel W480' },
  { socket: 'LGA1200', chipset: 'Intel B560' },
  { socket: 'LGA1200', chipset: 'Intel H570' },
  { socket: 'LGA1200', chipset: 'Intel Z590' },
  { socket: 'LGA1700', chipset: 'Intel H610' },
  { socket: 'LGA1700', chipset: 'Intel B660' },
  { socket: 'LGA1700', chipset: 'Intel H670' },
  { socket: 'LGA1700', chipset: 'Intel Z690' },
  { socket: 'LGA1700', chipset: 'Intel Z790' },
  { socket: 'LGA1851', chipset: 'Próximos chipsets serie 800 de Intel (Aún no confirmados)' },
  { socket: 'LGA2011', chipset: 'Intel X79' },
  { socket: 'LGA2011-3', chipset: 'Intel X99' },
  { socket: 'LGA2066', chipset: 'Intel X299' }
];

async function seedCompatibilidad() {
  for (const data of compatibilidadData) {
    await prisma.compatibilidadSocketChipset.create({
      data,
    });
  }
  console.log('Base de datos poblada con éxito');
}

seedCompatibilidad().catch(e => console.error(e)).finally(async () => {
  await prisma.$disconnect();
});
